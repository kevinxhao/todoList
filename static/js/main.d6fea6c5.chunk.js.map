{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","completed","completeTodo","bind","assertThisInitialized","event","todoId","target","parentNode","id","self","completexhttp","XMLHttpRequest","onreadystatechange","readyState","status","setState","console","log","responseText","open","setRequestHeader","send","JSON","stringify","className","react_default","a","createElement","onClick","text","deleteTask","Component","NewTodo","onSubmit","add","type","placeholder","value","input","onChange","App","todos","sort","thiss","xhttp","parse","e","preventDefault","data","addxhttp","toConsumableArray","concat","deletexhttp","otherTasks","filter","todo","b","localeCompare","_this2","src_NewTodo_0","updateTodo","map","src_Todo_0","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wRA6DeA,2BAxDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,UAAWR,EAAKD,MAAMS,WAE1BR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALLA,4EAONY,GACT,IACIC,EAASD,EAAME,OAAOC,WAAWC,GACjCC,EAAMd,KAINe,EAAgB,IAAIC,eAExBD,EAAcE,mBAAqB,WACR,GAAnBjB,KAAKkB,YAAkC,KAAflB,KAAKmB,OAC7BL,EAAKM,SAAS,CACVf,WAAW,IAEW,GAAnBL,KAAKkB,YAEZG,QAAQC,IAAItB,KAAKuB,eAKzBR,EAAcS,KAAK,MAAO,6BAA+Bd,GAAQ,GACjEK,EAAcU,iBAAiB,eAAgB,oBAC/CV,EAAcU,iBAAiB,YAtBlB,sCAuBbV,EAAcW,KAAKC,KAAKC,UApBb,CACPvB,WAAW,sCA2BjB,IAAIwB,EAAY,OAKhB,OAHE7B,KAAKI,MAAMC,YACbwB,EAAY,kBAGVC,EAAAC,EAAAC,cAAA,OAAKnB,GAAIb,KAAKJ,MAAMiB,GAAIgB,UAAWA,GAClCC,EAAAC,EAAAC,cAAA,UAAQH,UAAU,QAAQI,QAASjC,KAAKM,eACxCwB,EAAAC,EAAAC,cAAA,SAAIhC,KAAKJ,MAAMsC,MAChBJ,EAAAC,EAAAC,cAAA,QAAMH,UAAU,SAASI,QAASjC,KAAKJ,MAAMuC,YAA7C,gBAlDaC,cCcJC,0LAZX,OACEP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMnB,GAAG,UAAUyB,SAAUtC,KAAKJ,MAAM2C,KACpCT,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAO3B,GAAG,OAAO4B,YAAY,UAAUC,MAAO1C,KAAKJ,MAAM+C,MAAQC,SAAU5C,KAAKJ,MAAMgD,WAClGd,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,SAASF,SAAUtC,KAAKJ,MAAM2C,IAAK1B,GAAG,OAAnD,gBANQuB,cCuIPS,cAjIX,SAAAA,EAAYjD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACfhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,KAAMJ,KACDQ,MAAQ,CACT0C,MAAO,GACPH,MAAO,IAEX9C,EAAK0C,IAAM1C,EAAK0C,IAAIhC,KAATT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACXA,EAAK+C,SAAW/C,EAAK+C,SAASrC,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAKsC,WAAatC,EAAKsC,WAAW5B,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAClBA,EAAKkD,KAAOlD,EAAKkD,KAAKxC,KAAVT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KATGA,mFAaf,IACMmD,EAAQhD,KACViD,EAAQ,IAAIjC,eAChBiC,EAAMhC,mBAAqB,WACvB,GAAwB,GAApBgC,EAAM/B,YAAmC,KAAhB+B,EAAM9B,OAAe,CAE9C,IAAI2B,EAAQnB,KAAKuB,MAAMD,EAAM1B,cAC7ByB,EAAM5B,SAAS,CAAC0B,MAAOA,IACvBzB,QAAQC,IAAIwB,KAIpBG,EAAMzB,KAAK,MAAO,6BAA6B,GAC/CyB,EAAMxB,iBAAiB,YAbV,sCAcbwB,EAAMvB,mCAINyB,GACF,IACIH,EAAQhD,KACVmD,EAAEC,iBACF,IAAIC,EAAO,CACTnB,KAAMlC,KAAKI,MAAMuC,OAEfW,EAAW,IAAItC,eAEvBsC,EAASrC,mBAAqB,WACH,GAAnBjB,KAAKkB,YAAkC,KAAflB,KAAKmB,OAC7B6B,EAAM5B,SAAS,CACX0B,MAAMhD,OAAAyD,EAAA,EAAAzD,CAAKkD,EAAM5C,MAAM0C,OAAlBU,OAAA,CAAyB7B,KAAKuB,MAAMlD,KAAKuB,kBAExB,GAAnBvB,KAAKkB,YACZG,QAAQC,IAAItB,KAAKuB,eAIzB+B,EAAS9B,KAAK,OAAQ,6BAA6B,GACnD8B,EAAS7B,iBAAiB,eAAgB,oBAC1C6B,EAAS7B,iBAAiB,YApBX,sCAqBf6B,EAAS5B,KAAKC,KAAKC,UAAUyB,IAEzBrD,KAAKoB,SAAS,CAACuB,MAAO,sCAIjBQ,GACLnD,KAAKoB,SAAS,CACVuB,MAAOQ,EAAExC,OAAO+B,2CAKbjC,GACP,IACIC,EAASD,EAAME,OAAOC,WAAWC,GACjCmC,EAAQhD,KACRyD,EAAc,IAAIzC,eACtByC,EAAYxC,mBAAqB,WAC7B,GAAuB,GAAnBjB,KAAKkB,YAAkC,KAAflB,KAAKmB,OAAe,CAE5C,IAAMuC,EAAaV,EAAM5C,MAAM0C,MAAMa,OAAO,SAACC,GACzC,GAAIA,EAAK/C,KAAOH,EACZ,OAAOkD,IAEfZ,EAAM5B,SAAS,CACX0B,MAAOY,SAEe,GAAnB1D,KAAKkB,YACZG,QAAQC,IAAItB,KAAKuB,eAIzBkC,EAAYjC,KAAK,SAAU,6BAA+Bd,GAAQ,GAClE+C,EAAYhC,iBAAiB,eAAgB,oBAC7CgC,EAAYhC,iBAAiB,YArBhB,sCAsBbgC,EAAY/B,sCAKd,IAAIoB,EAAQ9C,KAAKI,MAAM0C,MACvBA,EAAMC,KAAK,SAAUhB,EAAG8B,GACtB,OAAO9B,EAAEG,KAAK4B,cAAcD,EAAE3B,QAEhClC,KAAKoB,SAAS,CAAC0B,MAAOA,qCAGf,IAAAiB,EAAA/D,KACL,OAEI8B,EAAAC,EAAAC,cAAA,WAASnB,GAAK,SACdiB,EAAAC,EAAAC,cAAA,OAAKH,UAAU,UACfC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,yDAEAF,EAAAC,EAAAC,cAACgC,EAAD,CAASzB,IAAOvC,KAAKuC,IACrBK,SAAY5C,KAAK4C,SACjBqB,WAAcjE,KAAKiE,WACnBtB,MAAS3C,KAAKI,MAAMuC,QACpBb,EAAAC,EAAAC,cAAA,UAAQC,QAAWjC,KAAK+C,KAAMlC,GAAG,QAAjC,WAGCb,KAAKI,MAAM0C,MAAMoB,IAAI,SAACN,GAAD,OACd9B,EAAAC,EAAAC,cAACmC,EAAD,CAAMC,IAAOR,EAAK/C,GAClBA,GAAM+C,EAAK/C,GACXR,UAAauD,EAAKvD,UAClB6B,KAAQ0B,EAAK1B,KACbC,WAAc4B,EAAK5B,uBA3HrBC,aCHlBiC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d6fea6c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n  //help from kirupa.com to create constructor\n  constructor(props) {\n      super(props);\n      this.state = {\n          completed: this.props.completed\n      }\n      this.completeTodo = this.completeTodo.bind(this);\n  }\n  completeTodo(event) {\n      var apiKey = \"858cc5-e41e20-114ef7-1f66fa-5d0de3\";\n      var todoId = event.target.parentNode.id;\n      var self= this;\n      var data = {\n          completed: true\n      };\n      var completexhttp = new XMLHttpRequest();\n\n      completexhttp.onreadystatechange = function () {\n          if (this.readyState == 4 && this.status == 200) {\n              self.setState({\n                  completed: true\n              });\n          } else if (this.readyState == 4) {\n\n              console.log(this.responseText);\n\n          }\n      };\n\n      completexhttp.open(\"PUT\", \"https://cse204.work/todos/\" + todoId, true);\n      completexhttp.setRequestHeader(\"Content-type\", \"application/json\");\n      completexhttp.setRequestHeader(\"x-api-key\", apiKey);\n      completexhttp.send(JSON.stringify(data));\n\n  }\n\n\n\n\n  render() {\n    var className = \"todo\";\n    //testing if it's completed\n  if (this.state.completed) {\n    className = \"todo completed\";\n  }\n    return (\n      <div id={this.props.id} className={className}>\n       <button className=\"check\" onClick={this.completeTodo}></button>\n       <p>{this.props.text}</p>\n      <span className=\"delete\" onClick={this.props.deleteTask}>&times;</span>\n     </div>\n    );\n  }\n}\n\n\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n  render() {\n    return (\n      <div>\n          <form id=\"newTask\" onSubmit={this.props.add}>\n              <input type=\"text\" id=\"text\" placeholder=\"Task...\" value={this.props.input}  onChange={this.props.onChange}/>\n              <button type=\"submit\" onSubmit={this.props.add} id=\"add\">Add</button >\n          </form>\n      </div>\n\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, {\n    Component\n} from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n  //help from kirupa.com to set up constructor and props\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: [],\n            input: ''\n        }\n        this.add = this.add.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.sort = this.sort.bind(this);\n    }\n    //saves data even after being refreshed: help from blog.pusher.com\n    componentDidMount() {\n        var apiKey = \"858cc5-e41e20-114ef7-1f66fa-5d0de3\";\n        const thiss = this;\n        var xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function () {\n            if (xhttp.readyState == 4 && xhttp.status == 200) {\n\n                var todos = JSON.parse(xhttp.responseText);\n                thiss.setState({todos: todos});\n                console.log(todos);\n            }\n        };\n\n        xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n        xhttp.setRequestHeader(\"x-api-key\", apiKey);\n        xhttp.send();\n\n    }\n    //new tasks\n    add(e) {\n      var apiKey = \"858cc5-e41e20-114ef7-1f66fa-5d0de3\";\n      var thiss = this;\n        e.preventDefault();\n        var data = {\n          text: this.state.input\n        }\n        var addxhttp = new XMLHttpRequest();\n\n    addxhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            thiss.setState({\n                todos: [...thiss.state.todos, JSON.parse(this.responseText)]\n            });\n        } else if (this.readyState == 4) {\n            console.log(this.responseText);\n        }\n    };\n\n    addxhttp.open(\"POST\", \"https://cse204.work/todos\", true);\n    addxhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    addxhttp.setRequestHeader(\"x-api-key\", apiKey);\n    addxhttp.send(JSON.stringify(data));\n\n        this.setState({input: ''});\n    }\n\n\n    onChange(e) {\n        this.setState({\n            input: e.target.value\n        });\n    }\n\n    //deleting todos\n    deleteTask(event) {\n        var apiKey = \"858cc5-e41e20-114ef7-1f66fa-5d0de3\";\n        var todoId = event.target.parentNode.id;\n        var thiss = this;\n        var deletexhttp = new XMLHttpRequest();\n        deletexhttp.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n              //keeps the other todos\n                const otherTasks = thiss.state.todos.filter((todo) => {\n                    if (todo.id !== todoId) {\n                        return todo;\n                    }});\n                thiss.setState({\n                    todos: otherTasks\n                });\n            } else if (this.readyState == 4) {\n                console.log(this.responseText);\n            }\n        };\n\n        deletexhttp.open(\"DELETE\", \"https://cse204.work/todos/\" + todoId, true);\n        deletexhttp.setRequestHeader(\"Content-type\", \"application/json\");\n        deletexhttp.setRequestHeader(\"x-api-key\", apiKey);\n        deletexhttp.send();\n    }\n\n    //use sort function from w3schools\n    sort(){\n      var todos = this.state.todos;\n      todos.sort(function (a, b) {\n        return a.text.localeCompare(b.text);\n      })\n      this.setState({todos: todos});\n\n    }\n    render() {\n        return (\n\n            <section id = \"todos\" >\n            <div className=\"header\">\n            <h1>To Do List</h1>\n            <h4>Click the Box to Cross Out Completed Tasks!</h4>\n\n            <NewTodo add = {this.add}\n            onChange = {this.onChange}\n            updateTodo = {this.updateTodo}\n            input = {this.state.input}/>\n            <button onClick = {this.sort} id=\"sort\"> Sort </button>\n            </div>\n\n            {this.state.todos.map((todo) =>\n                    <Todo key = {todo.id}\n                    id = {todo.id}\n                    completed = {todo.completed}\n                    text = {todo.text}\n                    deleteTask = {this.deleteTask}\n                    />)}\n            </section>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}